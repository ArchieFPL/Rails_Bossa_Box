---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/auth/login":
    post:
      summary: Authenticate User
      tags:
      - Authenticate
      parameters: []
      responses:
        '200':
          description: user authenticate
          content: {}
        '401':
          description: user unauthorized
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/api/v1/tools":
    get:
      summary: List Tools
      tags:
      - Tools
      parameters:
      - in: header
        name: Authorization
        required: true
        description: Client token
        schema:
          type: string
      responses:
        '200':
          description: list tools
          content: {}
        '422':
          description: invalid token
          content: {}
    post:
      summary: Create Tool
      tags:
      - Tools
      parameters:
      - in: header
        name: Authorization
        required: true
        description: Client Token
        schema:
          type: string
      responses:
        '201':
          description: create tool
          content: {}
        '402':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                link:
                  type: string
                description:
                  type: string
                tags:
                  type: string
              required:
              - title
              - link
              - description
              - tags
  "/api/v1/tools/{id}":
    get:
      summary: List tool by id
      tags:
      - Tools
      parameters:
      - in: header
        name: Authorization
        required: true
        description: Client Token
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: tool found
          content: {}
        '404':
          description: tool not found
          content: {}
    put:
      summary: Search Tool by id
      tags:
      - Tools
      parameters:
      - in: header
        name: Authorization
        required: true
        description: Client Token
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: no content
          content: {}
        '404':
          description: tool not found
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                link:
                  type: string
                description:
                  type: string
                tags:
                  type: string
    delete:
      summary: delete tool by id
      tags:
      - Tools
      parameters:
      - in: header
        name: Authorization
        required: true
        description: Client Token
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: no content
          content: {}
        '404':
          description: tool not found
          content: {}
  "/api/v1/tools/tags":
    post:
      summary: List tool by tag
      tags:
      - Tools
      parameters:
      - in: header
        name: Authorization
        required: true
        description: Client Token
        schema:
          type: string
      responses:
        '200':
          description: tool found
          content: {}
        '404':
          description: tool not found
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  type: string
              required:
              - tags
  "/api/v1/signup":
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                required:
                - message
                - token
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - error_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - email
              - password
              - password_confirmation
securityDefinitions:
  JWT:
    description: the jwt for API auth
    type: apiKey
    name: Authorization
    in: header
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
